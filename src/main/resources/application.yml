# ✅ 서버 포트 설정
server:
  port: 8080  # 기본 포트 8080. 필요 시 다른 포트로 변경 가능

# ✅ Spring 설정
spring:
  #autoconfigure:
  #  exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

  datasource:
    url: jdbc:mysql://localhost:3306/berp
    username: root
    password: a123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  # ================================
  # [🔧 데이터베이스 설정 - 아직 실제 사용 안하므로 주석처리]
  # datasource:
  #   url: jdbc:mysql://localhost:3306/berp_db?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
  #   username: berp_user         # DB 접속 ID
  #   password: berp_password     # DB 접속 비밀번호
  #   driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL 드라이버 클래스
  # ================================

  # ================================
  # [🧠 JPA 설정 - DB와 연결되면 사용 예정이므로 주석처리]
  # jpa:
  #   hibernate:
  #     ddl-auto: update        # 엔티티 변경 시 테이블 자동 반영. 운영환경에서는 none 권장
  #   show-sql: true            # 콘솔에 실행되는 SQL 출력
  #   properties:
  #     hibernate:
  #       format_sql: true      # SQL 포맷팅
  #       dialect: org.hibernate.dialect.MySQL8Dialect  # MySQL8용 SQL 문법 사용
  # ================================

  # ================================
  # [✉️ 이메일 설정 - 아직 메일 기능 안 쓰므로 주석처리]
  # mail:
  #   host: smtp.gmail.com        # SMTP 서버 주소 (예: gmail)
  #   port: 587                   # 포트 번호 (STARTTLS 용)
  #   username: your_email@gmail.com  # 발신자 이메일
  #   password: your_app_password     # 앱 비밀번호 또는 SMTP 인증키
  #   properties:
  #     mail:
  #       smtp:
  #         auth: true           # SMTP 인증 사용 여부
  #         starttls:
  #           enable: true       # TLS 보안 연결 사용 여부
  # ================================

  # ================================
  # [🖥️ 타임리프 설정 - 템플릿 없으면 오류나므로 주석처리]
  thymeleaf:
     cache: false               # 캐시 비활성화 (수정사항 바로 반영)
     prefix: classpath:/templates/  # 템플릿 폴더 경로
     suffix: .html              # 템플릿 파일 확장자
     mode: HTML                 # HTML 모드 사용
     encoding: UTF-8            # 문자 인코딩
  # ================================

# ✅ Swagger 설정 - API 문서용
springdoc:
  swagger-ui:
    path: /swagger-ui.html     # Swagger UI 접속 경로 (ex. http://localhost:8080/swagger-ui.html)
    operations-sorter: method  # 메서드 정렬 기준 (GET, POST, PUT 순서)
  api-docs:
    path: /v3/api-docs         # OpenAPI JSON 문서 경로

# ================================
# [🔐 JWT 관련 설정 - 나중에 보안 구현 시 사용]
# jwt:
#   secret-key: berp-secret-key     # JWT 서명용 비밀 키
#   expiration-hours: 3             # JWT 유효 시간 (단위: 시간)
#   issuer: berp-api                # 토큰 발급자 식별자
# ================================

# ✅ 로깅 설정 (개발 시 SQL 로그 확인용)
logging:
  level:
    org.hibernate.SQL: debug        # 실행되는 SQL 출력
    org.hibernate.type: trace       # 바인딩되는 파라미터 값까지 출력

mybatis:
  maper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.team.berp.plant.DTO

